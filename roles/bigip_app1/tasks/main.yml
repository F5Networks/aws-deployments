- name: Deploying/updating Webserver Pool
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      payload='{{lookup('file', '~/vars/f5aws/env/' + env_name + '/' + vip_id + '_pool_from_containers.json')}}'
      collection_path='mgmt/tm/ltm/pool'
      resource_key="name"

- name: Deploying/updating High Speed Logging pool to send to Analytics Server
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/ltm/pool'
      resource_key="name"
      payload='{"name":"syslog_pool","members":[{"name":"10.0.3.32:514","address":"10.0.3.32"},{"name":"10.0.3.33:514","address":"10.0.3.33"}],"monitor":"tcp"}' 

##### UPLOAD DATAGROUP #####
# TODO:
# "Setting SSL Profiles"
# "Setting Remote Logging Profiles"

- name: Deploying/updating Analytics Profile
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/ltm/profile/analytics'
      resource_key="name"
      payload='{"name":"demo_analytics_profile","capturedTrafficExternalLogging":"disabled","capturedTrafficInternalLogging":"disabled","collectGeo":"enabled","collectIp":"enabled","collectMaxTpsAndThroughput":"enabled","collectMethods":"enabled","collectPageLoadTime":"enabled","collectResponseCodes":"enabled","collectSubnets":"enabled","collectUrl":"enabled","collectUserAgent":"enabled","collectUserSessions":"enabled","collectedStatsExternalLogging":"disabled","collectedStatsInternalLogging":"enabled","defaultsFrom":"/Common/analytics","notificationByEmail":"disabled","notificationBySnmp":"disabled","notificationBySyslog":"disabled","partition":"Common","publishIruleStatistics":"disabled","sampling":"enabled","sessionCookieSecurity":"ssl-only","sessionTimeoutMinutes":"5"}'

- name: Uploading Datagroup ... background for sorry page
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/ltm/data-group/internal'
      resource_key="name"
      payload='{"name":"images_background","type":"string","records":[{"name":"{{image_background}}"}]}'

- name: Uploading Datagroup ... image for sorry page
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/ltm/data-group/internal'
      resource_key="name"
      payload='{"name":"images_sorry","type":"string","records":[{"name":"{{image_sorry}}"}]}'

- name: Uploading iRules ... sorry_page_rule
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/ltm/rule'
      resource_key="name"
      payload='{"name":"irule_sorry_page","apiAnonymous":"{{irule_sorry_page|replace("\\","\\\\")|replace("\"","\\\"")|replace("\n","\\n")}}"}'

- name: Uploading iRules ... demo_analytics_rule
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/ltm/rule'
      resource_key="name"
      payload='{"name":"irule_demo_analytics","apiAnonymous":"{{irule_demo_analytics|replace("\\","\\\\")|replace("\"","\\\"")|replace("\n","\\n")}}"}'

- include: provision_waf_depends.yml
  vars:
    asm_policy_linux_high_base64: "{{ lookup('file', install_path + '/roles/bigip_app1/files/asm_policy_linux_high_base64') }}"

- name: Deploy the iApp template, since we are not using a default iApp on box
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/sys/application/template'
      payload='{{f5_http_backport_template|to_nice_json}}'
      resource_key="name"

- name: Deploy the iApp service,
  delegate_to: localhost
  bigip_config:
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      collection_path='mgmt/tm/sys/application/service'
      payload='{{f5_http_backport_service|to_nice_json}}'
      resource_key="name"
  ignore_errors: true