{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploys BIG-IP with interfaces on public, private, and management subnets.",
  "Parameters": {
    "vpc": {
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "Must be an existing VPC within working region."
    },
    "availabilityZone": {
      "Type": "String",
      "ConstraintDescription": "Must be an availability zone within the region associated with the specific VPC"
    },
    "publicSubnet": {
      "Description": "Public subnet",
      "Type": "String",
      "ConstraintDescription": "Must be subnet within specified availability zone"
    },
    "privateSubnet": {
      "Description": "Private subnet",
      "Type": "String",
      "ConstraintDescription": "Must be subnet within specified availability zone"
    },
    "managementSubnet": {
      "Description": "Management subnet",
      "Type": "String",
      "ConstraintDescription": "Must be subnet within specified availability zone"
    },
    "version": {
      "Description": "Platform version (i.e. 11.6)",
      "Type": "String",
      "ConstraintDescription": "Must be in <major>.<minor>.<maintenance> version format"
    },
    "licenseThroughput": {
      "Description": "Max Throughput Level",
      "Type": "String",
      "AllowedValues": [
        "25mbps",
        "200mbps",
        "1gbps",
        "None"
      ],
      "ConstraintDescription": "25mbps, 200mbps, 1gbps. Use None for BYOL licenses."
    },
    "licenseModel": {
      "Description": "License model for BIG-IP",
      "Type": "String",
      "ConstraintDescription": "Hourly or BYOL",
      "AllowedValues": [
        "hourly",
        "byol"
      ]
    },
    "licensePackage": {
      "Description": "GBB packaging",
      "Type": "String",
      "AllowedValues": [
        "good",
        "better",
        "best"
      ]
    },
    "instanceType": {
      "Description": "EC2 Instance type to be used for BIG-IP",
      "Type": "String",
      "Default": "m3.xlarge",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m3.large",
        "m3.xlarge",
        "m2.xlarge",
        "m3.2xlarge",
        "c3.large",
        "c3.xlarge"
      ]
    },
    "amiId": {
      "Description": "ID of BIG-IP AMI",
      "Type": "String"
    },
    "keyName": {
      "Description": "Name of private key for SSH login",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*"
    },
    "region": {
      "Description": "AWS region within which to deploy BIG-IP",
      "Type": "String",
      "AllowedValues": [
        "ap-northeast-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "eu-central-1",
        "sa-east-1",
        "us-east-1",
        "eu-west-1",
        "eu-east-1",
        "us-west-1",
        "us-west-2"
      ]
    },
    "SSHLocation": {
      "Description": " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "ManagementInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Management Interface for the BigIP",
        "GroupSet": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "managementSubnet"
        }
      }
    },
    "InternalInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "Internal Interface for the BigIP",
        "SubnetId": {
          "Ref": "privateSubnet"
        }
      }
    },
    "ExternalInterface": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Description": "External Interface for the BigIP",
        "GroupSet": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "publicSubnet"
        },
        "SecondaryPrivateIpAddressCount": "1"
      }
    },
    "VipIpAddress": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "VipIpAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VipIpAddress",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "ExternalInterface"
        },
        "PrivateIpAddress": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAtt": [
                "ExternalInterface",
                "SecondaryPrivateIpAddresses"
              ]
            }
          ]
        }
      }
    },
    "BigipInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "amiId"
        },
        "InstanceType": {
          "Ref": "instanceType"
        },
        "KeyName": {
          "Ref": "keyName"
        },
        "AvailabilityZone": {
          "Ref": "availabilityZone"
        },
        "NetworkInterfaces": [
          {
            "Description": "Management Interface",
            "DeviceIndex": "0",
            "NetworkInterfaceId": {
              "Ref": "ManagementInterface"
            }
          },
          {
            "Description": "External Interface",
            "DeviceIndex": "1",
            "NetworkInterfaceId": {
              "Ref": "ExternalInterface"
            }
          },
          {
            "Description": "Internal Interface",
            "DeviceIndex": "2",
            "NetworkInterfaceId": {
              "Ref": "InternalInterface"
            }
          }
        ]
      }
    },
    "ManagementIpAddress": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "ManagementIPAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ManagementIpAddress",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "ManagementInterface"
        }
      }
    }
  },
  "Outputs": {
    "BigipInstance": {
      "Description": "Instance id of Big-IP in Amazon",
      "Value": { "Ref": "BigipInstance" }
    },
    "ExternalInterfacePublicIp" : {
      "Description" : "IP Address of External interface attached to BIG-IP",
      "Value" : { "Ref" : "VipIpAddress" }
    },
    "ExternalInterfacePrivateIp": {
      "Description": "Internally routable IP of public interface on BIG-IP",
      "Value": { "Fn::GetAtt":  [ "ExternalInterface", "PrimaryPrivateIpAddress"]}
    },
    "ManagementInterfacePublicIp" : {
      "Description" : "IP address of management port on BIG-IP",
      "Value" : { "Ref" : "ManagementIpAddress" }
    },
    "ManagementInterfacePrivateIp": {
      "Description": "Internally routable IP of management interface on BIG-IP",
      "Value": { "Fn::GetAtt":  [ "ManagementInterface", "PrimaryPrivateIpAddress"]}
    },
    "InternalInterfacePrivateIp": {
      "Description": "Internally routable IP of internal interface on BIG-IP",
      "Value": { "Fn::GetAtt":  [ "InternalInterface", "PrimaryPrivateIpAddress"]}
    }
  }
}