---

# ami-7b755b4b - us-west-2 (OR), 200mbps best hourly 11.6

- shell: "python {{ install_path }}/bin/get_bigip_image_id.py --region {{ region }} --version {{ bigip_version }} --license {{ bigip_license_model }} --package {{ bigip_license_package }} --throughput {{ bigip_license_throughput }} --matchone"
  register: output

- name: Launch a big-ip in each AZ
  action: cloudformation
    stack_name="{{ env_name }}-{{ inventory_hostname }}"
    state=present
    region="{{ region }}"
    template={{ install_path }}/roles/infra/files/bigip.json
  args:
    tags: 
      Environment: "{{ env_name }}"
      Host: "{{ inventory_hostname }}"
      InstanceType: "BIG-IP"
    template_parameters:
      region: "{{ region }}"
      vpc: "{{ vpc_id }}"
      availabilityZone: "{{ availability_zone }}"
      managementSubnet: "{{ management_subnet }}"
      privateSubnet: "{{ private_subnet }}"
      publicSubnet: "{{ public_subnet }}"
      instanceType: "{{ bigip_instance_type }}"
      amiId: "{{ output['stdout'] }}" #eventually we'll want to leverage the mappings in cft
      keyName: "{{ key_name }}"
  register: bigip_deploy_results

- name: debug bigip_deploy_results var 
  debug: var=bigip_deploy_results  

# Persist data to disk for use across plays
- copy: content="{{ bigip_deploy_results | to_yaml }}" dest=~/vars/f5aws/env/{{ env_name }}/{{ inventory_hostname }}.yml
- copy: content="{{ bigip_deploy_results['stack_outputs'] | to_json }}" dest=~/vars/f5aws/env/{{ env_name }}/{{ inventory_hostname }}.json


