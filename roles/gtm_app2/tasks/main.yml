---
- name: Setup the App2 Virtual Server on each BIG-IP object 
  delegate_to: localhost
  bigip_config:
      name="Setup the App2 Virtual Server on each BIG-IP object "
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      payload='{"name":"{{vip_id}}","destination":"{{hostvars[item]["VipPrivateIp"]}}:80"}'
      collection_path='mgmt/tm/gtm/server/~Common~{{hostvars[item]["cluster_name"]}}/virtual-servers'
      resource_key="name"
  with_items: groups['bigip-cluster-seeds']

- name: Setup the AZ pools
  delegate_to: localhost
  bigip_config:
      name="Setup the AZ pools"
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      payload='{"name":"{{vip_id}}_pool_{{hostvars[item]["AvailabilityZone"]}}","loadBalancingMode":"round-robin","members":[{"name":"{{hostvars[item]["cluster_name"]}}:{{vip_id}}"}]}'
      collection_path='mgmt/tm/gtm/pool/a'
      resource_key="name"
  with_items: groups['bigip-cluster-seeds']

- name: Store create wideip pool string from jinja 2 template
  template: src=../roles/gtm_conf/templates/wideip_pool.cfg.j2 dest=~/vars/f5aws/env/{{ env_name }}/{{vip_id}}_wideip_pool_string.json
  delegate_to: localhost

- shell: "cat ~/vars/f5aws/env/{{ env_name }}/{{vip_id}}_wideip_pool_string.json"
  register: wideip_pool_string
  delegate_to: localhost

- name: Setup the Wideip for Vip2
  delegate_to: localhost
  bigip_config:
      name="Setup the Wideip for Vip2"
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      payload='{"name":"{{vip_id}}.example.com","poolLbMode":"topology","ipv6NoErrorResponse":"enabled","pools":[{{wideip_pool_string.stdout}}]}'
      collection_path='mgmt/tm/gtm/wideip/a'
      resource_key="name"

- name: Setup the Wideip for demo.example.com
  delegate_to: localhost
  bigip_config:
      name="Setup the Wideip for demo.example.com"
      state=present
      host={{ ansible_ssh_host }}
      user={{ bigip_rest_user }}
      password={{ bigip_rest_password }}
      payload='{"name":"demo.example.com","poolLbMode":"topology","ipv6NoErrorResponse":"enabled","pools":[{{wideip_pool_string.stdout}}]}'
      collection_path='mgmt/tm/gtm/wideip/a'
      resource_key="name"
