---
- hosts: gtm-managers
  gather_facts: no
  tasks:
    - name: deploy gtms
      include: "{{ install_path }}/roles/infra/tasks/deploy_gtm.yml"


# We need some way to add the managemnt ips to the gtms group
# Unfortunately, the add_hosts directive in ansible does not actually
# execute on a per-host basis within a playbook.  
# Here we solve this problem by looping through JSON results from previous 
# provisioning steps by the bigip-managers group
- hosts: 
   localhost
  gather_facts: no
  tasks:
    - shell: "cat ~/vars/f5aws/env/{{ env_name }}/{{ item }}.json"
      register: output
      with_items: groups['gtm-managers']
      delegate_to: localhost

    - add_host: name="{{ item.stdout | from_json | attr('get')('ManagementInterfacePublicIp') }}" group=gtms
        ExternalInterfacePublicIp="{{ item.stdout | from_json | attr('get')('ExternalInterfacePublicIp') }}"
        ExternalInterfacePrivateIp="{{ item.stdout | from_json | attr('get')('ExternalInterfacePrivateIp') }}"
      with_items: output['results']

# Need to wait for port 22 to open up
- hosts: gtms
  gather_facts: False
  tasks:
    - local_action: wait_for host={{ inventory_hostname }} search_regex=OpenSSH delay=10 port=22
    # - raw: "run /util bash -c 'cat /var/prompt/ps1'"
    - raw: "run /util bash -c 'cat /var/prompt/ps1'"
      until: (result.stdout.find("Active") != -1)
      register: result
      retries: 40
  sudo: false

# Basic device setup using tmsh to enable further provisioning
- hosts: gtms
  gather_facts: no
  roles:
    # adds users via tmsh
    - bigip_base 
    # adds json so ansible doesn't puke
    #- bigip_jsonify
    # provisions system globals like ntp, dns, snmp, syslog, db keys  
    - bigip_system
    # sets AWS keys and disables DHCP
    - bigip_system_aws
    # sets vlans, self-ips, routes
    - gtm_base
    - gtm_network

- hosts: gtms
  gather_facts: no
  roles:
    # Cluster the GTMs  
    - gtm_cluster


